<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2014-2015 EUBrazilCC (EU‐Brazil Cloud Connect)

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  version 2 as published by the Free Software Foundation at:
  http://www.gnu.org/licenses/gpl-2.0.html

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, 5th Floor, Boston, MA 02110-1301, USA.
-->
<WorkflowService>
    <!-- Name of the service, and also the caption that will appear     -->
    <!-- in the top line of the block on the workflow editor            -->
    <Name>Apply</Name>

    <!-- Service description that appears at the bottom of the editor   -->
    <!-- window when the block is selected                              -->
    <Description>Execute a query on a datacube</Description>

    <!-- Category to place the service in on the editor palette         -->
    <Category>Ophidia</Category>

    <!-- Homepage for block documentation                               -->
    <Homepage>/</Homepage>

    <!-- Class name of the service. This needs to extend either the     -->
    <!-- DataProcessorService or the CloudDataProcessorService object   -->
    <!--ServiceRoutine>CmdLineWrapper</ServiceRoutine-->
    <ServiceRoutine>com.connexience.server.workflow.cloud.services.ShellDataProcessorService</ServiceRoutine>

    <!-- Auto deployed service. Do NOT change for dynamically deployed  -->
    <!-- services that are uploaded via this editor                     -->
    <ServiceType>AUTO</ServiceType>

    <!-- Data streaming mode for this service. This can be one of:      -->
    <!--                                                                -->
    <!-- nostream   - Data is passed in one block through service       -->
    <!-- sequential - Data is streamed one connection at a time         -->
    <!-- parallel   - Data is streamed from all connections in parallel -->
    <StreamMode>nostream</StreamMode>
    
    <!-- Editable service parameters. These properties define what is   -->
    <!-- displayed in the properties panel when a block is selected in  -->
    <!-- the workflow editor. The format of properties is:              -->
    <!--                                                                -->
    <!-- <Property name="" type="" description="" default=""/>          -->
    <!--                                                                -->
    <!-- A list of options is supported for Text and numerical          -->
    <!-- properties, so adding options="A,B,C" will show a drop down    -->
    <!-- list in the editor. The values in options are comma delimited  -->
    <!--                                                                -->
    <!--                                                                -->
    <!-- Where:  name = property name without spaces                    -->
    <!--         type = Document - file reference                       -->
    <!--                Folder - folder reference                       -->
    <!--                Integer - integer paramater                     -->
    <!--                Boolean - true / false value                    -->
    <!--                String - text parameter                         -->
    <!--                Double - floating point value                   -->
    <!--                Date - java date parameter                      -->
    <!--                Project - Project / Study object             -->
    <!--                StringList - an array of text values. Use JSON  -->
    <!--                    notation to input the default value, e.g.   -->
    <!--                            default='["A", "B", 3]'             -->
    <!--                    will result in a list with three text       -->
    <!--                    values: A, B, 3                             -->
    <!--                    NOTE: JSON uses the double quotes (") to    -->
    <!--                    delimit text values, thus it is best to     -->
    <!--                    delimit the default value with single       -->
    <!--                    quotes (').                                 -->
    <!--                TwoColumnList - two columns of text values. Use -->
    <!--                    JSON notation to input the default value.   -->
    <!--                    The value is represented a JSON array of    -->
    <!--                    arrays, e.g.                                -->
    <!--                            default='[["A", 1], ["B", "C"]]'    -->
    <!--                    will result in a list with two pairs of     -->
    <!--                    text values.                                -->
    <!--                ServerObject - an arbitrary object that the user-->
    <!--                    has access to. The class name used for      -->
    <!--                    searching is set in the default attribute.  -->
    <Properties>
        <Property name="User Name"      default=""  type="String"  category="Connection" />
        <Property name="User Password"  default=""  type="String"  category="Connection" />
        <Property name="Server Address" default=""  type="String"  category="Connection" />
        <Property name="Server Port"    default=""  type="String"  category="Connection" />

        <Property name="Cube Name"      default=""      type="String"   description="Name of the input datacube. The name must be in DOI format" />
        <Property name="Query"          default=""      type="String"   description="User-defined SQL query. It may use Ophidia primitives" />
        <Property name="Dimensions Query"   default=""  type="String"   description="User-defined SQL query to be applied to dimension values. It may use Ophidia primitives. In case the size of original array decreases, by default, values are set as incremental indexes" />
        <Property name="Measure"        default=""      type="String"   description="Name of the new measure resulting from the specified operation" />
        <Property name="Measure Type"   default="manual" type="String"  options="auto,manual" description="If “auto” measure type will be set automatically to that of input datacube; the related primitive arguments have to be omitted in “Query”, if “manual” (default) measure type and the related primitive arguments have to be set in “Query”" />
        <Property name="Dimension Type" default="manual" type="String"  options="auto,manual" description=" If “auto” dimension type will be set automatically to that of input datacube, the related primitive arguments have to be omitted in “Dimensions Query”; if “manual” (default) dimension type and the related primitive arguments have to be set in “Dimensions Query”" />
        <Property name="Check Type"     default="true" type="Boolean"  description="If set the agreement between input and output data types of nested primitives will be checked, otherwise data type will be not checked (valid only for “manual” setting of “Measure Type” and “Dimension Type”)" />
        <Property name="Compressed"     default="auto"  type="String"   options="auto,no,yes" description="If “auto” (default) new data wil be compressed according to compression status of input datacube, if “yes” new data will be compressed, if “no” data will be inserted without compression" />
        <Property name="Schedule"       default="0"     type="Integer"  description="Scheduling algorithm. The only possible value is 0, for a static linear block distribution of resources" />

        <!--Property name="Execution Mode" default="async" type="String" options="async,sync" description="Operator execution mode. Possible values are async (default) for asynchronous mode, sync for synchronous mode with json-compliant output" category="System" /-->
        <Property name="Core No."       default="1" type="Integer" description="Number of parallel processes to be used (min. 1)" category="System" />
        <Property name="Session Id"     default="" type="String" description="Session identifier used server-side to manage sessions and jobs. Usually users don’t need to use/modify it, except when it is necessary to create a new session or switch to another one" category="System" />
        <Property name="Object Key Filter" default="all" type="String" options="all,none,apply" description="Filter on the output of the operator written to file (default=all => no filter, none => no output, apply => show operator’s output DOI as text)" category="System" />

        <!--
        <Property name="DebugMode" default="false" type="Boolean" category="Debugging" description="" />
        <Property name="DebugSuspended" default="true" type="Boolean" category="Debugging" description="" />
        <Property name="DebugPort" default="5005" type="Integer" category="Debugging" description="" />
        -->
    </Properties>

    <!-- Definition of all of the inputs to a service. The format is:   -->
    <!--                                                                -->
    <!-- <Input name="" type="" streaming=""/>                          -->
    <!--                                                                -->
    <!-- Where:     name = name of input also displayed on connections  -->
    <!--            type = data-wrapper - mixed matrix of data          -->
    <!--                   file-wrapper - list of file names            -->
    <!--                   object-wrapper - Serialized Java object      -->
    <!--                   properties-wrapper - List of name-value pairs-->
    <!--                   link-wrapper - Reference to server documents -->
    <!--            streaming = true / false - is this a streaming link -->
    <!--            optional=true|false is this an optional input       -->
    <Inputs>
        <Input name="properties" type="properties-wrapper" optional="true" />
    </Inputs>

    <!-- Definition of all of the outputs from service. The format is:  -->
    <!--                                                                -->
    <!-- <Output name="" type="" streaming=""/>                         -->
    <!--                                                                -->
    <!-- Where:     name = name of input also displayed on connections  -->
    <!--            type = data-wrapper - mixed matrix of data          -->
    <!--                   file-wrapper - list of file names            -->
    <!--                   object-wrapper - Serialized Java object      -->
    <!--            streaming = true / false - is this a streaming link -->
    <Outputs>
        <Output name="properties" type="properties-wrapper" />
    </Outputs>

</WorkflowService>
